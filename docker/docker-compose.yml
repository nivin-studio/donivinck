version: '3'

networks:
  frontend:
    driver: bridge
    ipam:
      config:
        - subnet: 172.26.0.0/16
  backend:
    driver: bridge
    ipam:
      config:
        - subnet: 172.27.0.0/16

services:
  php-fpm:
    build:
      context: ./php-fpm
      args:
        - PHP_INSTALL_PHALCON=${PHP_INSTALL_PHALCON}
    environment:
      - TZ=${TZ}
    volumes:
      - ${CODE_PATH_HOST}:/var/www
      - ${CONF_PATH_HOST}/php/php7.3.ini:/usr/local/etc/php/php.ini
      - ${CONF_PATH_HOST}/supervisord:/etc/supervisord.d
    expose:
      - "9000"
    networks:
      backend:
        ipv4_address: 172.27.0.2
    restart: always

  nginx:
    build:
      context: ./nginx
    environment:
      - TZ=${TZ}
    volumes:
      - ${CODE_PATH_HOST}:/var/www
      - ${LOGS_PATH_HOST}:/var/log/nginx
      - ${CONF_PATH_HOST}/ssl:/etc/nginx/ssl
      - ${CONF_PATH_HOST}/sites:/etc/nginx/sites-available
      - ${CONF_PATH_HOST}/logrotate:/etc/logrotate.d
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - php-fpm
    networks:
      frontend:
        ipv4_address: 172.26.0.2
      backend:
        ipv4_address: 172.27.0.3
    restart: always

  mysql:
    image: mysql:5.7
    environment:
      - TZ=${TZ}
      - MYSQL_USER=${MYSQL_USERNAME}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
    volumes:
      - ${DATA_PATH_HOST}/mysql:/var/lib/mysql
    ports:
      - "${MYSQL_PORT}:3306"
    networks:
      backend:
        ipv4_address: 172.27.0.4
    restart: always

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    environment:
      - TZ=${TZ}
      - MYSQL_USER=${MYSQL_USERNAME}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - PMA_ARBITRARY=1
      - PMA_HOST=${MYSQL_HOST}
      - PMA_PORT=${MYSQL_PORT}
    ports:
      - "${MYSQL_WEBUI_PORT}:80"
    depends_on:
      - mysql
    networks:
      frontend:
        ipv4_address: 172.26.0.3
      backend:
        ipv4_address: 172.27.0.7
    restart: always

  mongo:
    image: mongo:4.0
    environment:
      - TZ=${TZ}
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
    ports:
      - "${MONGO_PORT}:27017"
    networks:
      backend:
        ipv4_address: 172.27.0.5
    restart: always

  mongo-express:
    image: mongo-express
    environment:
      - TZ=${TZ}
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_USERNAME}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_PASSWORD}
      - ME_CONFIG_MONGODB_PORT=${MONGO_PORT}
      - ME_CONFIG_MONGODB_SERVER=${MONGO_HOST}
      - ME_CONFIG_BASICAUTH_USERNAME=${MONGO_WEBUI_USERNAME}
      - ME_CONFIG_BASICAUTH_PASSWORD=${MONGO_WEBUI_PASSWORD}
    ports:
      - "${MONGO_WEBUI_PORT}:8081"
    depends_on:
      - mongo
    networks:
      frontend:
        ipv4_address: 172.26.0.4
      backend:
        ipv4_address: 172.27.0.8
    restart: always

  redis:
    image: redis:5.0
    environment:
      - TZ=${TZ}
    volumes:
      - ${DATA_PATH_HOST}/redis:/data
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      backend:
        ipv4_address: 172.27.0.6
    restart: always

  redis-webui:
    image: erikdubbelboer/phpredisadmin
    environment:
      - TZ=${TZ}
      - REDIS_1_HOST=${REDIS_HOST}
      - REDIS_1_PORT=${REDIS_PORT}
      - ADMIN_USER=${REDIS_WEBUI_USERNAME}
      - ADMIN_PASS=${REDIS_WEBUI_PASSWORD}
    ports:
      - "${REDIS_WEBUI_PORT}:80"
    depends_on:
      - redis
    networks:
      frontend:
        ipv4_address: 172.26.0.5
      backend:
        ipv4_address: 172.27.0.9
    restart: always